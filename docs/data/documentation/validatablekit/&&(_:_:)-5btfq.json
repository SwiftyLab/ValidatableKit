{"sections":[],"variants":[{"paths":["\/documentation\/validatablekit\/&&(_:_:)-5btfq"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"metadata":{"externalID":"s:14ValidatableKit2aaoiyAA9ValidatorVyxSgGADyxG_AFtlF","role":"symbol","modules":[{"name":"ValidatableKit"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"roleHeading":"Operator","symbolKind":"op","title":"&&(_:_:)"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit"]]},"references":{"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit":{"url":"\/documentation\/validatablekit","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","kind":"symbol","role":"collection","title":"ValidatableKit","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"type":"topic","title":"Validator","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validatablekit\/validator","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Validates data of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}]}}}