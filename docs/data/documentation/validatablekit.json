{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"inlineContent":[{"text":"ValidatableKit","type":"text"}],"type":"strong"},{"text":" allows validating data by providing ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":" for the type. ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":"s can be created by directly providing callback that performs the validation on basic data types and provides ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"]},{"inlineContent":[{"type":"text","text":"Or the library provided DSL can be used to add validations to properties for complex data types:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"]}],"kind":"content"}],"metadata":{"role":"collection","symbolKind":"module","externalID":"ValidatableKit","title":"ValidatableKit","modules":[{"name":"ValidatableKit"}],"roleHeading":"Framework"},"variants":[{"paths":["\/documentation\/validatablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"],"title":"Validation DSL"},{"title":"Validation Result","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"]},{"title":"Operators","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit"},"abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"references":{"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","title":"||(_:_:)","abstract":[{"text":"Combines two ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s, succeeding if either of the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s does not fail.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"title":"&&(_:_:)","role":"symbol","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"kind":"symbol","role":"symbol","type":"topic","title":"ValidatorResult","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","abstract":[{"text":"A type representing result of validations","type":"text"},{"text":" ","type":"text"},{"text":"performed by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResult","kind":"identifier"}],"navigatorTitle":[{"text":"ValidatorResult","kind":"identifier"}],"url":"\/documentation\/validatablekit\/validatorresult"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"abstract":[{"type":"text","text":"A name space type containing all default"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","type":"reference"},{"type":"text","text":" provided by this library."}],"role":"symbol","url":"\/documentation\/validatablekit\/validatorresults","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResults"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","kind":"symbol","title":"ValidatorResults","navigatorTitle":[{"kind":"identifier","text":"ValidatorResults"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"url":"\/documentation\/validatablekit\/validation","type":"topic","title":"Validation","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validation"}],"abstract":[{"text":"Adds ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":"s for property type ","type":"text"},{"code":"U","type":"codeVoice"},{"text":" of parent type ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Validation"}]},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","abstract":[{"type":"text","text":"Inverts a validation."}],"type":"topic","url":"\/documentation\/validatablekit\/!(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"!(_:)"},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"type":"topic","role":"symbol","abstract":[{"text":"A type capable of being validated.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validatable","kind":"identifier"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","navigatorTitle":[{"text":"Validatable","kind":"identifier"}],"title":"Validatable","url":"\/documentation\/validatablekit\/validatable","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/validatablekit\/+(_:_:)","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"}],"title":"+(_:_:)","abstract":[{"text":"Unions two character sets.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"abstract":[{"text":"Validates data of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"url":"\/documentation\/validatablekit\/validator","kind":"symbol","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","title":"Validator","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}]},"doc://ValidatableKit/documentation/ValidatableKit":{"title":"ValidatableKit","type":"topic","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","url":"\/documentation\/validatablekit","role":"collection","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"An error type representing validation failure.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","kind":"symbol","title":"ValidationError","navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/validatablekit\/validationerror"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"title":"||(_:_:)","url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","kind":"symbol","type":"topic","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"url":"\/documentation\/validatablekit\/validations","type":"topic","title":"Validations","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"abstract":[{"text":"Stores property validations of data type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Validations"}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"type":"topic","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"text":"s using AND logic, succeeding if both ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s succeed without error.","type":"text"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"role":"symbol","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv","kind":"symbol","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"text":" using OR logic. The non-optional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"title":"||(_:_:)","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"title":"&&(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]}}}