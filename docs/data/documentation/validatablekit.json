{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"],"title":"Validation DSL"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"],"title":"Validation Result"},{"title":"Operators","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"]}],"metadata":{"externalID":"ValidatableKit","modules":[{"name":"ValidatableKit"}],"title":"ValidatableKit","roleHeading":"Framework","symbolKind":"module","role":"collection"},"abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"sections":[],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"ValidatableKit"}],"type":"strong"},{"text":" allows validating data by providing ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":" for the type. ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference"},{"text":"s can be created by directly providing callback that performs the validation on basic data types and provides ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"],"type":"codeListing"},{"inlineContent":[{"text":"Or the library provided DSL can be used to add validations to properties for complex data types:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"kind":"symbol","abstract":[{"type":"text","text":"A name space type containing all default"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"text":" provided by this library.","type":"text"}],"type":"topic","role":"symbol","title":"ValidatorResults","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResults","kind":"identifier"}],"navigatorTitle":[{"text":"ValidatorResults","kind":"identifier"}],"url":"\/documentation\/validatablekit\/validatorresults"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"kind":"symbol","abstract":[{"type":"text","text":"Validates data of type "},{"code":"T","type":"codeVoice"},{"type":"text","text":" specialized with."}],"type":"topic","role":"symbol","title":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validatablekit\/validator"},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","navigatorTitle":[{"text":"Validatable","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type capable of being validated.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validatable","kind":"identifier"}],"type":"topic","url":"\/documentation\/validatablekit\/validatable","role":"symbol","title":"Validatable"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","title":"||(_:_:)","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"role":"symbol","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"title":"&&(_:_:)","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}]},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","kind":"symbol","role":"symbol","title":"||(_:_:)","url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An error type representing validation failure.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","url":"\/documentation\/validatablekit\/validationerror","role":"symbol","title":"ValidationError"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","title":"&&(_:_:)","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","type":"topic","title":"Validations","abstract":[{"type":"text","text":"Stores property validations of data type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"role":"symbol","url":"\/documentation\/validatablekit\/validations","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"navigatorTitle":[{"kind":"identifier","text":"Validations"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"kind":"symbol","url":"\/documentation\/validatablekit\/validation","type":"topic","abstract":[{"text":"Adds ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true,"type":"reference"},{"text":"s for property type ","type":"text"},{"code":"U","type":"codeVoice"},{"text":" of parent type ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validation"}],"title":"Validation","navigatorTitle":[{"kind":"identifier","text":"Validation"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","kind":"symbol","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"text":"Combines two ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s, succeeding if either of the ","type":"text"},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s does not fail."}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","title":"!(_:)","abstract":[{"text":"Inverts a validation.","type":"text"}],"role":"symbol","url":"\/documentation\/validatablekit\/!(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"kind":"symbol","abstract":[{"type":"text","text":"A type representing result of validations"},{"type":"text","text":" "},{"type":"text","text":"performed by "},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"symbol","title":"ValidatorResult","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResult"}],"navigatorTitle":[{"kind":"identifier","text":"ValidatorResult"}],"url":"\/documentation\/validatablekit\/validatorresult"},"doc://ValidatableKit/documentation/ValidatableKit":{"kind":"symbol","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"type":"topic","role":"collection","title":"ValidatableKit","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","url":"\/documentation\/validatablekit"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","title":"&&(_:_:)","abstract":[{"text":"Combines two ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s using AND logic, succeeding if both ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s succeed without error.","type":"text"}],"role":"symbol","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","title":"+(_:_:)","abstract":[{"text":"Unions two character sets.","type":"text"}],"role":"symbol","url":"\/documentation\/validatablekit\/+(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"}]}}}