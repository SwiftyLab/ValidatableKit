{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"],"title":"Validation DSL"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"],"title":"Validation Result"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"],"title":"Operators"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit"]}],"abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"ValidatableKit","type":"text"}]},{"text":" allows validating data by providing ","type":"text"},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true},{"text":" for the type. ","type":"text"},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true},{"text":"s can be created by directly providing callback that performs the validation on basic data types and provides ","type":"text"},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","isActive":true},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"]},{"inlineContent":[{"type":"text","text":"Or the library provided DSL can be used to add validations to properties for complex data types:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"]}]}],"metadata":{"modules":[{"name":"ValidatableKit"}],"roleHeading":"Framework","externalID":"ValidatableKit","title":"ValidatableKit","symbolKind":"module","role":"collection"},"references":{"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","role":"symbol","type":"topic","title":"Validation","url":"\/documentation\/validatablekit\/validation","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validation","kind":"identifier"}],"abstract":[{"text":"Adds ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference","isActive":true},{"text":"s for property type ","type":"text"},{"code":"U","type":"codeVoice"},{"text":" of parent type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Validation","kind":"identifier"}]},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","role":"symbol","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"url":"\/documentation\/validatablekit\/validationerror","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","title":"ValidationError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"An error type representing validation failure."}],"type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"kind":"symbol","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"type":"topic","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}]},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","role":"symbol","title":"!(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Inverts a validation.","type":"text"}],"url":"\/documentation\/validatablekit\/!(_:)"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","role":"symbol","title":"||(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResults"}],"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","kind":"symbol","url":"\/documentation\/validatablekit\/validatorresults","title":"ValidatorResults","navigatorTitle":[{"kind":"identifier","text":"ValidatorResults"}],"role":"symbol","abstract":[{"type":"text","text":"A name space type containing all default"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"type":"text","text":" provided by this library."}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","role":"symbol","title":"&&(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"url":"\/documentation\/validatablekit\/&&(_:_:)-14azh"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"abstract":[{"text":"Validates data of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"title":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","url":"\/documentation\/validatablekit\/validator","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit":{"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","kind":"symbol","url":"\/documentation\/validatablekit","title":"ValidatableKit","role":"collection","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s using AND logic, succeeding if both "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s succeed without error."}],"title":"&&(_:_:)","role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","type":"topic","url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","abstract":[{"text":"Combines two ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s, succeeding if either of the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":"s does not fail.","type":"text"}],"role":"symbol","title":"||(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","role":"symbol","title":"+(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"}],"abstract":[{"text":"Unions two character sets.","type":"text"}],"url":"\/documentation\/validatablekit\/+(_:_:)"},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"kind":"symbol","url":"\/documentation\/validatablekit\/validations","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","title":"Validations","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validations","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Stores property validations of data type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"navigatorTitle":[{"text":"Validations","kind":"identifier"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResult"}],"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","kind":"symbol","url":"\/documentation\/validatablekit\/validatorresult","title":"ValidatorResult","navigatorTitle":[{"kind":"identifier","text":"ValidatorResult"}],"role":"symbol","abstract":[{"type":"text","text":"A type representing result of validations"},{"type":"text","text":" "},{"type":"text","text":"performed by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"."}]},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"role":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","url":"\/documentation\/validatablekit\/validatable","abstract":[{"type":"text","text":"A type capable of being validated."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validatable"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Validatable"}],"title":"Validatable"}}}