{"abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"ValidatableKit","type":"text"}],"type":"strong"},{"type":"text","text":" allows validating data by providing "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":" for the type. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"s can be created by directly providing callback that performs the validation on basic data types and provides "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"type":"text","text":":"}]},{"code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or the library provided DSL can be used to add validations to properties for complex data types:","type":"text"}]},{"code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"],"type":"codeListing","syntax":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"],"title":"Validation DSL"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"],"title":"Validation Result"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"],"title":"Operators"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/validatablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Framework","role":"collection","modules":[{"name":"ValidatableKit"}],"externalID":"ValidatableKit","symbolKind":"module","title":"ValidatableKit"},"references":{"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"kind":"symbol","title":"||(_:_:)","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","type":"topic","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","role":"symbol","type":"topic","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Combines two ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s using AND logic, succeeding if both ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s succeed without error.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validatable","kind":"identifier"}],"title":"Validatable","role":"symbol","type":"topic","url":"\/documentation\/validatablekit\/validatable","kind":"symbol","navigatorTitle":[{"text":"Validatable","kind":"identifier"}],"abstract":[{"text":"A type capable of being validated.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"navigatorTitle":[{"kind":"identifier","text":"Validations"}],"url":"\/documentation\/validatablekit\/validations","title":"Validations","kind":"symbol","abstract":[{"type":"text","text":"Stores property validations of data type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Unions two character sets.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV","kind":"typeIdentifier"}],"title":"+(_:_:)","url":"\/documentation\/validatablekit\/+(_:_:)"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"kind":"symbol","title":"||(_:_:)","type":"topic","abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s, succeeding if either of the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s does not fail."}],"url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","title":"ValidationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationError"}],"kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/validationerror","abstract":[{"text":"An error type representing validation failure.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit":{"url":"\/documentation\/validatablekit","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","kind":"symbol","role":"collection","title":"ValidatableKit","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"title":"&&(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"url":"\/documentation\/validatablekit\/validatorresult","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResult","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"ValidatorResult","abstract":[{"type":"text","text":"A type representing result of validations"},{"type":"text","text":" "},{"type":"text","text":"performed by "},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"ValidatorResult","kind":"identifier"}],"type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"type":"topic","abstract":[{"type":"text","text":"Adds "},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true},{"type":"text","text":"s for property type "},{"type":"codeVoice","code":"U"},{"type":"text","text":" of parent type "},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validation"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","title":"Validation","url":"\/documentation\/validatablekit\/validation","navigatorTitle":[{"kind":"identifier","text":"Validation"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"url":"\/documentation\/validatablekit\/validatorresults","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResults","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"ValidatorResults","abstract":[{"type":"text","text":"A name space type containing all default"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","isActive":true},{"type":"text","text":" provided by this library."}],"navigatorTitle":[{"text":"ValidatorResults","kind":"identifier"}],"type":"topic"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"kind":"symbol","url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"title":"||(_:_:)","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"type":"topic","title":"Validator","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validatablekit\/validator","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Validates data of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}]},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"url":"\/documentation\/validatablekit\/!(_:)","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","role":"symbol","abstract":[{"type":"text","text":"Inverts a validation."}],"kind":"symbol","type":"topic","title":"!(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]}}}