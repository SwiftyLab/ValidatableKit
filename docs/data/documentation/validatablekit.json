{"hierarchy":{"paths":[[]]},"kind":"symbol","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"ValidatableKit","type":"text"}]},{"text":" allows validating data by providing ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":" for the type. ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":"s can be created by directly providing callback that performs the validation on basic data types and provides ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"],"type":"codeListing"},{"inlineContent":[{"text":"Or the library provided DSL can be used to add validations to properties for complex data types:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"],"type":"codeListing"}]}],"metadata":{"modules":[{"name":"ValidatableKit"}],"role":"collection","roleHeading":"Framework","title":"ValidatableKit","externalID":"ValidatableKit","symbolKind":"module"},"topicSections":[{"title":"Validation DSL","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"]},{"title":"Validation Result","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"]},{"title":"Operators","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"]}],"variants":[{"paths":["\/documentation\/validatablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"url":"\/documentation\/validatablekit\/validation","abstract":[{"type":"text","text":"Adds "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"s for property type "},{"type":"codeVoice","code":"U"},{"type":"text","text":" of parent type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validation"}],"navigatorTitle":[{"kind":"identifier","text":"Validation"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","title":"Validation","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"title":"||(_:_:)","url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"text":"s, succeeding if either of the ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s does not fail.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"title":"||(_:_:)","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"type":"topic","url":"\/documentation\/validatablekit\/validations","title":"Validations","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"abstract":[{"text":"Stores property validations of data type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" specialized with.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Validations"}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"title":"&&(_:_:)","role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"type":"topic","url":"\/documentation\/validatablekit\/validatorresults","navigatorTitle":[{"kind":"identifier","text":"ValidatorResults"}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","title":"ValidatorResults","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResults"}],"abstract":[{"text":"A name space type containing all default","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","type":"reference","isActive":true},{"text":" provided by this library.","type":"text"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"type":"text","text":"Inverts a validation."}],"url":"\/documentation\/validatablekit\/!(_:)","title":"!(_:)","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)"},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"abstract":[{"text":"Unions two character sets.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","title":"+(_:_:)","url":"\/documentation\/validatablekit\/+(_:_:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"CharacterSet","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"text":", ","kind":"text"},{"text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV","kind":"typeIdentifier"}],"role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","role":"symbol","title":"||(_:_:)","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit":{"type":"topic","url":"\/documentation\/validatablekit","role":"collection","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","title":"ValidatableKit","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"role":"symbol","title":"ValidationError","abstract":[{"text":"An error type representing validation failure.","type":"text"}],"url":"\/documentation\/validatablekit\/validationerror","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationError"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationError"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"type":"topic","url":"\/documentation\/validatablekit\/validatorresult","navigatorTitle":[{"kind":"identifier","text":"ValidatorResult"}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","title":"ValidatorResult","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResult"}],"abstract":[{"text":"A type representing result of validations","type":"text"},{"text":" ","type":"text"},{"text":"performed by ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Combines two ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":"s using AND logic, succeeding if both ","type":"text"},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s succeed without error."}],"kind":"symbol","type":"topic","title":"&&(_:_:)","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"url":"\/documentation\/validatablekit\/validator","title":"Validator","kind":"symbol","abstract":[{"text":"Validates data of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"type":"topic","url":"\/documentation\/validatablekit\/validatable","navigatorTitle":[{"text":"Validatable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","title":"Validatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validatable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type capable of being validated."}],"kind":"symbol"}}}