{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"ValidatableKit"}]},{"type":"text","text":" allows validating data by providing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":" for the type. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"s can be created by directly providing callback that performs the validation on basic data types and provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or the library provided DSL can be used to add validations to properties for complex data types:"}]},{"type":"codeListing","syntax":"swift","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/validatablekit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ValidatableKit","title":"ValidatableKit","symbolKind":"module","role":"collection","modules":[{"name":"ValidatableKit"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Validation DSL","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"]},{"title":"Validation Result","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"]},{"title":"Operators","identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"]}],"references":{"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"role":"symbol","title":"!(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Inverts a validation."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/!(_:)"},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"role":"symbol","title":"ValidationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationError"}],"abstract":[{"type":"text","text":"An error type representing validation failure."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"url":"\/documentation\/validatablekit\/validationerror"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"role":"symbol","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"role":"symbol","title":"&&(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"role":"symbol","title":"ValidatorResult","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResult"}],"abstract":[{"type":"text","text":"A type representing result of validations"},{"type":"text","text":" "},{"type":"text","text":"performed by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidatorResult"}],"url":"\/documentation\/validatablekit\/validatorresult"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"role":"symbol","title":"Validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"abstract":[{"type":"text","text":"Validates data of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/validatablekit\/validator"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"role":"symbol","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s, succeeding if either of the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s does not fail."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh"},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"role":"symbol","title":"ValidatorResults","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatorResults"}],"abstract":[{"type":"text","text":"A name space type containing all default"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"type":"text","text":" provided by this library."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidatorResults"}],"url":"\/documentation\/validatablekit\/validatorresults"},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"role":"symbol","title":"Validatable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validatable"}],"abstract":[{"type":"text","text":"A type capable of being validated."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validatable"}],"url":"\/documentation\/validatablekit\/validatable"},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"role":"symbol","title":"Validation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validation"}],"abstract":[{"type":"text","text":"Adds "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"s for property type "},{"type":"codeVoice","code":"U"},{"type":"text","text":" of parent type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validation"}],"url":"\/documentation\/validatablekit\/validation"},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"role":"symbol","title":"Validations","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"abstract":[{"type":"text","text":"Stores property validations of data type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Validations"}],"url":"\/documentation\/validatablekit\/validations"},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"role":"symbol","title":"+(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CharacterSet","preciseIdentifier":"s:10Foundation12CharacterSetV"}],"abstract":[{"type":"text","text":"Unions two character sets."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/+(_:_:)"},"doc://ValidatableKit/documentation/ValidatableKit":{"role":"collection","title":"ValidatableKit","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"role":"symbol","title":"&&(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-14azh"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"role":"symbol","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"role":"symbol","title":"&&(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s using AND logic, succeeding if both "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s succeed without error."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","kind":"symbol","type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr"}}}