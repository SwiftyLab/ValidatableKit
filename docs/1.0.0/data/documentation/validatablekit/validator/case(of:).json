{"metadata":{"role":"symbol","title":"case(of:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CustomStringConvertible"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Type Method","modules":[{"name":"ValidatableKit"}],"symbolKind":"method","extendedModule":"ValidatableKit","externalID":"s:14ValidatableKit9ValidatorVAAs23CustomStringConvertibleRzlE4case2ofACyxGqd__m_t8RawValueSYQyd__Rszs12CaseIterableRd__SYRd__lFZ"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator\/case(of:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"enum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RawValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s12CaseIterableP","text":"CaseIterable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SY","text":"RawRepresentable","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit\/validator\/case(of:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"]]},"abstract":[{"type":"text","text":"Validates that the data can be converted to a value of an enum type with iterable cases."}],"references":{"doc://ValidatableKit/documentation/ValidatableKit/Validator/case(of:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"case(of:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CustomStringConvertible","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/validatablekit\/validator\/case(of:)","abstract":[{"text":"Validates that the data can be converted to a value of an enum type with iterable cases.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator\/case(of:)"},"doc://ValidatableKit/documentation/ValidatableKit":{"type":"topic","title":"ValidatableKit","role":"collection","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","kind":"symbol","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"url":"\/documentation\/validatablekit"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"type":"topic","title":"Validator","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Validates data of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"url":"\/documentation\/validatablekit\/validator"}}}