{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit"]]},"variants":[{"paths":["\/documentation\/validatablekit\/&&(_:_:)-14azh"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"roleHeading":"Operator","externalID":"s:14ValidatableKit2aaoiyAA9ValidatorVyxSgGAF_ADyxGtlF","title":"&&(_:_:)","symbolKind":"op","modules":[{"name":"ValidatableKit"}]},"references":{"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","role":"symbol","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"title":"&&(_:_:)"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","url":"\/documentation\/validatablekit\/validator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"navigatorTitle":[{"kind":"identifier","text":"Validator"}],"abstract":[{"type":"text","text":"Validates data of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"title":"Validator"},"doc://ValidatableKit/documentation/ValidatableKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","url":"\/documentation\/validatablekit","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"title":"ValidatableKit"}}}