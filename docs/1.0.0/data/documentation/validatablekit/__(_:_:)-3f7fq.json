{"sections":[],"metadata":{"title":"||(_:_:)","roleHeading":"Operator","role":"symbol","symbolKind":"op","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"externalID":"s:14ValidatableKit2oooiyAA9ValidatorVyxSgGAF_ADyxGtlF","modules":[{"name":"ValidatableKit"}]},"identifier":{"url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","interfaceLanguage":"swift"},"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit\/__(_:_:)-3f7fq"]}],"hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"languages":["swift"]}]}],"references":{"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using OR logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"type":"topic","role":"symbol","title":"||(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"||","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit":{"title":"ValidatableKit","type":"topic","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"url":"\/documentation\/validatablekit","kind":"symbol","role":"collection"},"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"kind":"symbol","role":"symbol","abstract":[{"text":"Validates data of type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" specialized with.","type":"text"}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}],"title":"Validator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"url":"\/documentation\/validatablekit\/validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"topic"}}}