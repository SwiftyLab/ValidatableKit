{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"languages":["swift"],"platforms":["Linux"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq"},"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"ValidatableKit"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"externalID":"s:14ValidatableKit2aaoiyAA9ValidatorVyxSgGADyxG_AFtlF","roleHeading":"Operator","title":"&&(_:_:)","symbolKind":"op","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit\/&&(_:_:)-5btfq"]}],"references":{"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"topic","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"url":"\/documentation\/validatablekit\/validator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"title":"Validator","role":"symbol","abstract":[{"text":"Validates data of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"title":"&&(_:_:)","kind":"symbol","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","type":"topic","abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" values, assuming the other ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" handles them.","type":"text"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}]},"doc://ValidatableKit/documentation/ValidatableKit":{"abstract":[{"type":"text","text":"Composable data validation API in Swift exposing simple DSL for writing validations."}],"url":"\/documentation\/validatablekit","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","role":"collection","title":"ValidatableKit","type":"topic"}}}