{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit\/&&(_:_:)-5btfq"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq"},"metadata":{"roleHeading":"Operator","modules":[{"name":"ValidatableKit"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"symbolKind":"op","title":"&&(_:_:)","externalID":"s:14ValidatableKit2aaoiyAA9ValidatorVyxSgGADyxG_AFtlF"},"hierarchy":{"paths":[["doc:\/\/ValidatableKit\/documentation\/ValidatableKit"]]},"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" using AND logic. The non-optional","type":"text"},{"text":" ","type":"text"},{"text":"validator will simply ignore ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" values, assuming the other ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"languages":["swift"],"platforms":["Linux"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","type":"topic","title":"Validator","role":"symbol","abstract":[{"text":"Validates data of type ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}],"kind":"symbol","url":"\/documentation\/validatablekit\/validator","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}]},"doc://ValidatableKit/documentation/ValidatableKit":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","type":"topic","title":"ValidatableKit","role":"collection","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"kind":"symbol","url":"\/documentation\/validatablekit"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"title":"&&(_:_:)","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"text":" handles them.","type":"text"}],"role":"symbol"}}}