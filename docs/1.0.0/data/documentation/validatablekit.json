{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"symbolKind":"module","role":"collection","modules":[{"name":"ValidatableKit"}],"title":"ValidatableKit","roleHeading":"Framework","externalID":"ValidatableKit"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"ValidatableKit"}]},{"type":"text","text":" allows validating data by providing "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":" for the type. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator"},{"type":"text","text":"s can be created by directly providing callback that performs the validation on basic data types and provides "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult"},{"type":"text","text":":"}]},{"syntax":"swift","code":["let skip: Validator<Int> = .init { _ in ValidatorResults.Skipped() }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or the library provided DSL can be used to add validations to properties for complex data types:"}]},{"syntax":"swift","code":["struct User: Validatable {","    let name: String","    let email: String","    let age: Int","","    var validator: Validator<Self> {","        return Validator<Self>","            .name(!.isEmpty, .alphanumeric)","            .email(.isEmail)","    }","}"],"type":"codeListing"}]}],"topicSections":[{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations"],"title":"Validation DSL"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults"],"title":"Validation Result"},{"identifiers":["doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh"],"title":"Operators"}],"abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/validatablekit"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit"},"hierarchy":{"paths":[[]]},"references":{"doc://ValidatableKit/documentation/ValidatableKit/Validator":{"title":"Validator","role":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"navigatorTitle":[{"kind":"identifier","text":"Validator"}],"type":"topic","url":"\/documentation\/validatablekit\/validator","abstract":[{"type":"text","text":"Validates data of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" specialized with."}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResult":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","title":"ValidatorResult","url":"\/documentation\/validatablekit\/validatorresult","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResult","kind":"identifier"}],"navigatorTitle":[{"text":"ValidatorResult","kind":"identifier"}],"abstract":[{"text":"A type representing result of validations","type":"text"},{"text":" ","type":"text"},{"text":"performed by ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true,"type":"reference"},{"text":".","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidatorResults":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResults","title":"ValidatorResults","url":"\/documentation\/validatablekit\/validatorresults","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorResults","kind":"identifier"}],"navigatorTitle":[{"text":"ValidatorResults","kind":"identifier"}],"abstract":[{"text":"A name space type containing all default","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidatorResult","isActive":true,"type":"reference"},{"text":" provided by this library.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/ValidationError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","url":"\/documentation\/validatablekit\/validationerror","abstract":[{"text":"An error type representing validation failure.","type":"text"}],"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"title":"ValidationError","role":"symbol","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/ValidationError"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-2znvr":{"abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s using AND logic, succeeding if both "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s succeed without error."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/validatablekit\/&&(_:_:)-2znvr","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-2znvr","type":"topic","title":"&&(_:_:)","role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-14azh":{"role":"symbol","title":"&&(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&&"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","kind":"symbol","url":"\/documentation\/validatablekit\/&&(_:_:)-14azh","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-14azh","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using AND logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}]},"doc://ValidatableKit/documentation/ValidatableKit/Validatable":{"url":"\/documentation\/validatablekit\/validatable","type":"topic","title":"Validatable","abstract":[{"text":"A type capable of being validated.","type":"text"}],"navigatorTitle":[{"text":"Validatable","kind":"identifier"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validatable","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/+(_:_:)":{"url":"\/documentation\/validatablekit\/+(_:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Unions two character sets."}],"kind":"symbol","type":"topic","title":"+(_:_:)","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/+(_:_:)"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3nwfv":{"role":"symbol","title":"||(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","kind":"symbol","url":"\/documentation\/validatablekit\/__(_:_:)-3nwfv","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3nwfv","abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}]},"doc://ValidatableKit/documentation/ValidatableKit/&&(_:_:)-5btfq":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/&&(_:_:)-5btfq","type":"topic","url":"\/documentation\/validatablekit\/&&(_:_:)-5btfq","title":"&&(_:_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&&","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"text":"Combines an optional and non-optional ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":" using AND logic. The non-optional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" values, assuming the other "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":" handles them."}]},"doc://ValidatableKit/documentation/ValidatableKit/Validations":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validations","title":"Validations","type":"topic","kind":"symbol","url":"\/documentation\/validatablekit\/validations","abstract":[{"text":"Stores property validations of data type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" specialized with.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validations"}],"navigatorTitle":[{"kind":"identifier","text":"Validations"}],"role":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit","title":"ValidatableKit","url":"\/documentation\/validatablekit","role":"collection","abstract":[{"text":"Composable data validation API in Swift exposing simple DSL for writing validations.","type":"text"}]},"doc://ValidatableKit/documentation/ValidatableKit/Validation":{"url":"\/documentation\/validatablekit\/validation","type":"topic","title":"Validation","abstract":[{"text":"Adds ","type":"text"},{"type":"reference","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validator","isActive":true},{"text":"s for property type ","type":"text"},{"type":"codeVoice","code":"U"},{"text":" of parent type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Validation","kind":"identifier"}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/Validation","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validation","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-8ozzh":{"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-8ozzh","url":"\/documentation\/validatablekit\/__(_:_:)-8ozzh","type":"topic","title":"||(_:_:)","role":"symbol","abstract":[{"type":"text","text":"Combines two "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s, succeeding if either of the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"s does not fail."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:14ValidatableKit9ValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://ValidatableKit/documentation/ValidatableKit/__(_:_:)-3f7fq":{"abstract":[{"type":"text","text":"Combines an optional and non-optional "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" using OR logic. The non-optional"},{"type":"text","text":" "},{"type":"text","text":"validator will simply ignore "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values, assuming the other "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":" handles them."}],"identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/__(_:_:)-3f7fq","url":"\/documentation\/validatablekit\/__(_:_:)-3f7fq","role":"symbol","type":"topic","title":"||(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"||"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:14ValidatableKit9ValidatorV","kind":"typeIdentifier","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}]},"doc://ValidatableKit/documentation/ValidatableKit/!(_:)":{"role":"symbol","title":"!(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ValidatableKit9ValidatorV","text":"Validator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","url":"\/documentation\/validatablekit\/!(_:)","identifier":"doc:\/\/ValidatableKit\/documentation\/ValidatableKit\/!(_:)","abstract":[{"type":"text","text":"Inverts a validation."}]}}}